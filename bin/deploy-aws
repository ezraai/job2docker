#!/usr/bin/env bash

set -e
set -u

deploy_aws_script_path=$(greadlink -e "${BASH_SOURCE[0]}")
deploy_aws_script_dir="${deploy_aws_script_path%/*}"

source "${deploy_aws_script_dir}/tcf-env.sh"

source "${deploy_aws_script_dir}/${UTIL_RELATIVE_PATH}util${RESOURCE_VERSION}.sh"

declare default_aws_account_id
default_aws_account_id=$(aws sts get-caller-identity --output text --query 'Account')

declare default_aws_region
default_aws_region=$(aws configure get region)

declare -r default_ecr_repo_name="${TALEND_JOB2DOCKER_REPO_NAME:-${USER}/talend}"

declare -r app_name="${1:-}"
declare -r image_version="${2:-0.1}"
declare -r aws_account_id="${3:-${default_aws_account_id}}"
declare -r aws_region="${4:-${default_aws_region}}"
declare -r ecr_repo_name="${5:-${default_ecr_repo_name}}"

if [ "${1:-}" == "-h" ] || [ "${1:-}" == "--h" ] || [ "${1:-}" == "-help" ] || [ "${1:-}" == "--help" ] || [ "${1:-}" == "-?" ]; then
    declare usage="./deploy-aws app_name [version] [aws_account_id] [aws_region] [ecr_repo]"
    echo "${usage}"
    exit
fi

required app_name image_version aws_account_id aws_region ecr_repo_name

INFO_LOG=true

declare ecr_login_command
ecr_login_command=$(aws ecr get-login --no-include-email --region us-east-1)
debugLog "${ecr_login_command}"
${ecr_login_command}

declare -r local_docker_user="${USER}"

aws ecr create-repository --repository-name "${ecr_repo_name}/${app_name}" && true

if [ "${?}" == 0 ]; then
    echo "ECR repository created"
else
    echo "ECR repository already exists"
fi


#infoLog "docker tag ${local_docker_user}/${app_name}:${image_version} ${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${ecr_repo_name}/${app_name}:${image_version}"
#docker tag "${local_docker_user}/${app_name}:${image_version}" "${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${ecr_repo_name}/${app_name}:${image_version}"
infoLog "docker tag ${app_name}:${image_version} ${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${ecr_repo_name}/${app_name}:${image_version}"
docker tag "${app_name}:${image_version}" "${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${ecr_repo_name}/${app_name}:${image_version}"

infoLog "docker push ${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${ecr_repo_name}/${app_name}:${image_version}"
docker push "${aws_account_id}.dkr.ecr.${aws_region}.amazonaws.com/${ecr_repo_name}/${app_name}:${image_version}"

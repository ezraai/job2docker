#!/usr/bin/env bash

set -e
set -u
set -o pipefail

aws_deploy_layer_path=$(greadlink -e "${BASH_SOURCE[0]}")
aws_deploy_layer_dir="${aws_deploy_layer_path%/*}"

#source ../util/util.sh
source "${aws_deploy_layer_dir}/../util/util.sh"

export INFO_LOG=true
export DEBUG_LOG=true

if [ "${1:-}" == "-h" ] || [ "${1:-}" == "--h" ] || [ "${1:-}" == "-help" ] || [ "${1:-}" == "--help" ] || [ "${1:-}" == "-?" ] ; then
    declare usage="./aws-deploy-layer <jobZipFile> [ <layerName> [ <description> ] ]"
    echo "${usage}"
    exit
fi

declare jobZipFile="${1:-}"

required jobZipFile

declare jobZipFile_name="${jobZipFile##*/}"
declare jobZipFile_root="${jobZipFile_name%.*}"

declare job_root_pattern="-+([0-9])\.+([0-9])\.+([0-9])*"
declare layerDefault="${jobZipFile_root/%${job_root_pattern}}"

declare layerName="${2:-${layerDefault}}"
required layerName

declare description="${3:-no description provided}"
declare license="${4:-no license specified}"

echo "Deploying ${jobZipFile} to AWS Lambda Layer ${layerName}"

# bucket option for publish-layer-version is an alternative when the zip file has already been loaded to a bucket.
# In our case the file is still local.
# Presumably when the bucket is provided we also manage the lifecycle of the layer asset.
# Using the current approach AWS will manage the layer asset's lifecycle.
#declare layerBucket=${3:-"lambda.eost.talend.com"}

#layerBucket

#aws lambda publish-layer-version \
#    --layer-name "${layerName}" \
#    --description "Talend Lambda job example" \
#    --license-info "MIT" \
#    --zip-file "fileb:///home/eost/lambda/TalendLambdaJobExample.zip" \
#    --content "S3Bucket=${layerBucket},S3Key=${layerName}.zip" \
#    --compatible-runtimes "java8"

#aws lambda publish-layer-version \
#    --layer-name "${layerName}" \
#    --description "Talend Lambda job example" \
#    --license-info "MIT" \
#    --compatible-runtimes "java8" \
#    --zip-file "fileb:///home/eost/lambda/TalendLambdaJobExample.zip"

debugVar jobZipFile

aws lambda publish-layer-version \
    --layer-name "${layerName}" \
    --description "${description}" \
    --license-info "${license}" \
    --compatible-runtimes "java8" \
    --zip-file "fileb://${jobZipFile}"

#!/usr/bin/env bash

#
# wrapper for aws lambda publish-layer-version
#
# derives layer name from s3 file
#

set -e
set -u
set -o pipefail

aws_deploy_layer_path=$(greadlink -e "${BASH_SOURCE[0]}")
aws_deploy_layer_dir="${aws_deploy_layer_path%/*}"

source "${aws_deploy_layer_dir}/tcf-env.sh"

source "${aws_deploy_layer_dir}/${UTIL_RELATIVE_PATH}util${RESOURCE_VERSION}.sh"

export INFO_LOG=true
export DEBUG_LOG=true

if [ "${1:-}" == "-h" ] || [ "${1:-}" == "--h" ] || [ "${1:-}" == "-help" ] || [ "${1:-}" == "--help" ] || [ "${1:-}" == "-?" ] ; then
    declare usage="./aws-deploy-layer <layerBucket> <jobS3Key> [ <layerName> [ <description> [ <license> ] ] ]"
    echo "${usage}"
    echo "deploy a previously job2lambda processed Talend Job zip file from an s3 bucket as an AWS Lambda Layer"
    exit
fi

declare layerBucket="${1:-}"

declare jobS3Key="${2:-}"

required layerBucket jobS3Key

declare jobS3Key_name="${jobS3Key##*/}"
declare jobS3Key_root="${jobS3Key_name%.*}"

declare extglob_save
extglob_save=$(shopt -p extglob || true )

shopt -s extglob

declare job_root_pattern="-+([0-9])\.+([0-9])\.+([0-9])*"
declare layerDefault="${jobS3Key_root/%${job_root_pattern}}"

eval "${extglob_save}"

declare layerName="${3:-${layerDefault}}"
required layerName

declare description="${4:-no description provided}"
declare license="${5:-no license specified}"

echo "Deploying ${jobS3Key} to AWS Lambda Layer ${layerName}"

debugVar jobS3Key
debugVar layerName

declare aws_command
which aws
if [ $? -ne 0 ]; then
   aws_command="/opt/java/lib/lambda-aws-cli/aws"
else
   aws_command="aws"
fi

cat <<EOF

executing:

${aws_command} lambda publish-layer-version \
    --layer-name "${layerName}" \
    --description "${description}" \
    --license-info "${license}" \
    --compatible-runtimes "java8" \
    --content "S3Bucket=${layerBucket},S3Key=${jobS3Key}"

EOF


${aws_command} lambda publish-layer-version \
    --layer-name "${layerName}" \
    --description "${description}" \
    --license-info "${license}" \
    --compatible-runtimes "java8" \
    --content "S3Bucket=${layerBucket},S3Key=${jobS3Key}"

